[project]
name = "zundamahjong"
dynamic = ["version"]
dependencies = [
  "flask",
  "flask-socketio",
  "pydantic",
  "sqlalchemy",
  "werkzeug",
]
requires-python = ">=3.10"


# Project metadata

description = "Web-based Mahjong game"
readme = "README.md"
license = "MIT"
license-files = ["LICEN[CS]E"]

keywords = ["game", "mahjong", "webgame"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Topic :: Games/Entertainment",
  "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
  "Framework :: Flask",
  "Framework :: Pydantic",
  "Programming Language :: JavaScript",
  "Programming Language :: Python",
]

[project.optional-dependencies]
postgresql = ["sqlalchemy[postgresql-psycopgbinary]"]

[project.urls]
Repository = "https://github.com/faraplay/zundamahjong"


# Building zundamahjong

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]


# Dev dependencies

[dependency-groups]
dev = [
  {include-group = "lint"},
  {include-group = "test"},
]

lint = [
  "basedpyright",
  "mypy",
  "ruff",
]

test = [
  "pytest",
]

production = [
  {include-group = "postgresql"},
  "gunicorn",
]

postgresql = [
  "psycopg[binary]",
]

alembic = [
  "alembic[tz]",
]


# Type checker configuration

[tool.mypy]
files = ["src", "tests"]
strict = true

[[tool.mypy.overrides]]
module = ["flask_socketio.*"]
ignore_missing_imports = true

[tool.basedpyright]
include = ["src", "tests"]
allowedUntypedLibraries = ["flask_socketio"]
pythonVersion = "3.10"

reportUnusedCallResult = false
reportUnusedFunction = false
reportUnusedParameter = false


# Other tool configs

[tool.alembic]
script_location = "%(here)s/alembic"
timezone = "UTC"

[[tool.alembic.post_write_hooks]]
name = "ruff"
type = "module"
module = "ruff"
options = "check --fix REVISION_SCRIPT_FILENAME"

[tool.ruff]
extend-exclude = ["alembic"]
