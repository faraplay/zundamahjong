---
name: Test Python Wheel

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set the Python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          version: "0.9.0"
      - name: Install the project
        run: |
          uv sync --locked --all-extras --dev
      - name: Lint with Ruff
        run: |
          uv run ruff check --output-format=github .
      - name: Type check with mypy
        run: |
          uv run mypy --strict src tests
      - name: Test with pytest
        run: |
          uv run pytest tests
      - name: Build Python wheel
        run: |
          uv build
      - uses: actions/upload-artifact@v4
        with:
          path: dist/zundamahjong-*-py3-none-any.whl
          name: zundamahjong-wheel-python-${{ matrix.python-version }}
          overwrite: true

  test-wheel:
    needs: build-wheel
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.12", "3.13"]

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v5
        with:
          name: zundamahjong-wheel-python-${{ matrix.python-version }}
      - name: Install wheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install zundamahjong-*-py3-none-any.whl
      - name: Install gunicorn
        run: |
          python -m pip install gunicorn
      - name: Test WSGI app
        run: |
          timeout --preserve-status 20s \
            gunicorn --bind unix://web.sock zundamahjong.server:app
